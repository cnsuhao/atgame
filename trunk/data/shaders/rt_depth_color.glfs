////////////////////////////////////////
// Global variable
////////////////////////////////////////
//precision mediump float;
precision highp float;

uniform float use_depth_texture_OES;

varying vec4 ps_vertexColor;
varying vec2 ps_depthInfo;

// from Fabien Sangalard's DEngine 
vec4 pack (float depth)
{
	const vec4 bitSh = vec4(256.0 * 256.0 * 256.0,
							256.0 * 256.0,
							256.0,
							1.0);
	const vec4 bitMsk = vec4(0,
							 1.0 / 256.0,
							 1.0 / 256.0,
							 1.0 / 256.0);
	vec4 comp = fract(depth * bitSh);
	comp -= comp.xxyz * bitMsk;
	return comp;
}

////////////////////////////////////////
// Fragment Shader Function
////////////////////////////////////////
void main()
{
	if(use_depth_texture_OES <= 0.0)
	{
		// the depth
		float normalizedDistance  = ps_depthInfo.x / ps_depthInfo.y;
		// scale -1.0;1.0 to 0.0;1.0
		//normalizedDistance = (normalizedDistance + 1.0) / 2.0;
		// pack value into 32-bit RGBA texture
		gl_FragColor = pack(normalizedDistance);
	}
	else
	{
		gl_FragColor = vec4(0,0,0,1.0);
	}
}